plugins {
    id "java"
    id "io.papermc.paperweight.userdev" version "1.5.0"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = "net.nimajnebec"
version = "1.1.0"

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "sonatype-snapshots"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly "com.github.LeonMangler:SuperVanish:6.2.16"
    compileOnly "io.papermc.paper:paper-api:1.20-R0.1-SNAPSHOT"
    implementation "xyz.jpenilla:reflection-remapper:0.1.0-SNAPSHOT"
    paperweightDevelopmentBundle "io.papermc.paper:dev-bundle:1.20-R0.1-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.assemble {
    // Configure reobfJar to run when invoking the build task
    dependsOn(reobfJar)
}

tasks.compileJava {
    // Set the release flag. This configures what version bytecode the compiler will emit, as well as what JDK APIs are usable.
    // See https://openjdk.java.net/jeps/247 for more information.
    options.release.set(targetJavaVersion)
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

shadowJar {
    relocate "xyz.jpenilla.reflectionremapper", group + ".shading.xyz.jpenilla.reflectionremapper"
}
